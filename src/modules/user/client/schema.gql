type Query {
	clients(
		clientId: ID
		userSearch: String
		socialSetId: [ID!]
		clientStatus: [Int!]
		sort: UserSort = {}
		pagination: Pagination = {} 
		addressFilter: UserAddressFilter = {}
		userInfoFilter: UserInfoFilter = {}
	): [Client!]!
}

type Mutation {
	addClient(
		mainContact: Contact!
		socialSetId: ID!
		clientStatus: Int
		clientSummary: String
		userInfo: UserInfoInput! 
		userAddress: UserAddressInput!
	): MutationResponse!

	changeClient(
		clientId: ID!
		clientStatus: Int
		clientSummary: String
		userInfo: UserInfoInput = {}
		userAddress: UserAddressInput = {}
	): MutationResponse!

	deleteClient(clientId: [ID!]): MutationResponses!
	restoreClient(clientId: [ID!]): MutationResponses!
}

type Client {
	clientId: ID!
	clientStatus: Int!
	clientSummary: String
	socialSet: SocialSet!
	clientInfo: UserInfo!
	count: Int!
	clientCreatedAt: DateTime!
}