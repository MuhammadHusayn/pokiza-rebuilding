type UserInfo {
	userId: ID!
	mainContact: Contact!
	secondContact: Contact
	firstName: String!
	lastName: String
	birthDate: Date
	age: Int
	gender: Gender
	branch: Branch!
	address: Address!
	joinedAt: DateTime!
}

input UserInfoFilter {
	age: Dual = {}
	gender: Gender
	branchId: [ID!]
}

input UserInfoInput {
	firstName: String
	lastName: String
	mainContact: Contact
	secondContact: Contact
	birthDate: Date
	gender: Gender
}

input UserAddressFilter {
	stateId: [ID!]
	regionId: [ID!]
	neighborhoodId: [ID!]
	streetId: [ID!]
	areaId: [ID!]
}

input UserAddressInput {
	stateId: ID!
	regionId: ID!
	neighborhoodId: ID
	streetId: ID
	areaId: ID
	homeNumber: Int
	target: String
}

input UserSort {
	userId: SortOptions
	firstName: SortOptions
	lastName: SortOptions
	age: SortOptions
	userCreatedAt: SortOptions
}