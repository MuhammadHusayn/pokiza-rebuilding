type Query {
	disabledAddresses(addressField: AddressType! addressFilter: AddressFilter): [AddressTypes!]!
}

type Mutation {
	disableAddress(addressField: AddressType! addressFieldId: [ID!]!): MutationResponses!
	enableAddress(addressField: AddressType! addressFieldId: [ID!]!): MutationResponses!
}

type Address {
	addressId: ID!
	state: State!
	region: Region!
	neighborhood: Neighborhood
	street: Street
	area: Area
	addressHomeNumber: Int
	addressTarget: String
	addressCreatedAt: DateTime
}

enum AddressType {
	state
	region
	neighborhood
	street
	area
}

union AddressTypes = State | Region | Neighborhood | Street | Area

input AddressFilter {
	state: StateFilter
	region: RegionFilter
	neighborhood: NeighborhoodFilter
	street: StreetFilter
	area: AreaFilter
}

input StateFilter {
	stateId: ID!
}

input RegionFilter {
	stateId: ID
	regionId: ID
}

input NeighborhoodFilter {
	regionId: ID
	neighborhoodId: ID
}

input StreetFilter {
	regionId: ID 
	neighborhoodId: ID 
	streetId: ID
}

input AreaFilter {
	regionId: ID! 
	neighborhoodId: ID 
	streetId: ID 
	areaId: ID
}